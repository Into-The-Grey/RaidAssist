name: Python CI - Enhanced

on:
  push:
    branches: [main, develop, feature/**]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
    env:
      # Required environment variables for OAuth functionality
      BUNGIE_API_KEY: ${{ secrets.BUNGIE_API_KEY }}
      BUNGIE_CLIENT_ID: ${{ secrets.BUNGIE_CLIENT_ID }}
      BUNGIE_REDIRECT_URI: ${{ secrets.BUNGIE_REDIRECT_URI }}
      QT_QPA_PLATFORM: offscreen  # Enable headless Qt for CI
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'  # Use Python 3.8 for PyInstaller compatibility

      - name: Install system dependencies for GUI testing
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 libegl1
          

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f dev-requirements.txt ]; then pip install -r dev-requirements.txt; fi
          pip install pytest pytest-cov pytest-xvfb  # Add pytest-xvfb for GUI testing

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$PYTHONPATH:$(pwd)" >> $GITHUB_ENV

      - name: Create logs directory
        run: mkdir -p logs

      - name: Run system tests
        run: |
          python -m pytest tests/test_systems.py -v --tb=short -m "not gui" || echo "System tests completed"

      - name: Run unit tests
        run: |
          python -m pytest tests/ -v --tb=short -m "not slow and not integration and not gui" --ignore=tests/test_systems.py

      - name: Run integration tests
        run: |
          python -m pytest tests/ -v --tb=short -m "integration and not gui" || echo "Integration tests completed"

      - name: Generate coverage report
        run: |
          python -m pytest tests/ --cov=api --cov=ui --cov=utils --cov-report=xml --cov-report=term-missing -m "not gui" || echo "Coverage completed"

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false  # Don't fail if coverage upload fails
